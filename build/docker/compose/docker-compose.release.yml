# Production Stack (from GitHub releases)
# Status: TODO - Not yet implemented
#
# Usage: docker-compose -f build/docker/compose/docker-compose.release.yml up

version: '3.8'

services:
  database:
    image: ghcr.io/aaronsb/kg-database:${VERSION:-latest}
    container_name: kg-database
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB:-knowledge_graph}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    image: ghcr.io/aaronsb/kg-api:${VERSION:-latest}
    container_name: kg-api
    depends_on:
      database:
        condition: service_healthy
    environment:
      POSTGRES_HOST: database
      POSTGRES_PORT: 5432
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      AI_PROVIDER: ${AI_PROVIDER}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    ports:
      - "${API_PORT:-8000}:8000"
    volumes:
      - api_logs:/app/logs

  viz:
    image: ghcr.io/aaronsb/kg-viz:${VERSION:-latest}
    container_name: kg-viz
    depends_on:
      - api
    environment:
      KG_API_URL: http://api:8000
    ports:
      - "${VIZ_PORT:-3000}:80"

volumes:
  postgres_data:
  api_logs:
