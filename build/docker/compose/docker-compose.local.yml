# Local Development Stack
# Status: PARTIAL - Database functional, others TODO
#
# Usage: docker-compose -f build/docker/compose/docker-compose.local.yml up

version: '3.8'

services:
  database:
    image: apache/age:PG16_latest
    container_name: knowledge-graph-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-kg_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-kg_password}
      POSTGRES_DB: ${POSTGRES_DB:-knowledge_graph}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../../schema:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER:-kg_user}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # TODO: Uncomment when api.Dockerfile is ready
  # api:
  #   build:
  #     context: ../..
  #     dockerfile: build/docker/api.Dockerfile
  #   container_name: kg-api
  #   depends_on:
  #     database:
  #       condition: service_healthy
  #   environment:
  #     POSTGRES_HOST: database
  #     POSTGRES_PORT: 5432
  #     POSTGRES_USER: ${POSTGRES_USER:-kg_user}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-kg_password}
  #     AI_PROVIDER: ${AI_PROVIDER:-openai}
  #     OPENAI_API_KEY: ${OPENAI_API_KEY}
  #   ports:
  #     - "8000:8000"
  #   volumes:
  #     - ../../src:/app/src  # Hot reload
  #     - api_logs:/app/logs

  # TODO: Uncomment when viz.Dockerfile is ready
  # viz:
  #   build:
  #     context: ../..
  #     dockerfile: build/docker/viz.Dockerfile
  #   container_name: kg-viz
  #   depends_on:
  #     - api
  #   environment:
  #     KG_API_URL: http://api:8000
  #   ports:
  #     - "3000:80"

volumes:
  postgres_data:
  api_logs:
